model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String?
  posts      Post[]    @relation(name: "PostToUser")
  profile    Profile?  @relation(name: "ProfileToUser")
  comment    Comment[] @relation(name: "CommentToUser")
  NEW        Comment[] @relation(name: "CommentToUser1")
  new        String?
  new1       String?
  newww      String?
  ad         String?
  userpostId Int?
  userpost   userpost? @relation(name: "UserTouserpost", fields: [userpostId], references: [id])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(name: "ProfileToUser", fields: [userId], references: [id])
}

model Post {
  id         Int              @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean          @default(false)
  authorId   Int
  author     User             @relation(name: "PostToUser", fields: [authorId], references: [id])
  comments   Comment[]        @relation(name: "CommentToPost")
  categories CategoryToPost[] @relation(name: "CategoryToPostToPost")
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  tags       Tag[]            @relation(name: "PostToTag")
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  postId    Int
  post      Post     @relation(name: "CommentToPost", fields: [postId], references: [id])
  authorId  Int      @unique
  author    User     @relation(name: "CommentToUser", fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  userId    Int?
  user      User?    @relation(name: "CommentToUser1", fields: [userId], references: [id])
}

model Category {
  id    Int              @id @default(autoincrement())
  name  String           @unique
  posts CategoryToPost[] @relation(name: "CategoryToCategoryToPost")
}

model CategoryToPost {
  postId     Int
  categoryId Int
  post       Post     @relation(name: "CategoryToPostToPost", fields: [postId], references: [id])
  category   Category @relation(name: "CategoryToCategoryToPost", fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

model Tag {
  id     Int         @id @default(autoincrement())
  name   String      @unique
  posts  Post        @relation(name: "PostToTag", fields: [postId], references: [id])
  postId Int
  Cat    Categories?
  Ad     Categories  @default(Cat1)
}

model userpost {
  id     Int     @id @default(autoincrement())
  userId String?
  user   User[]  @relation(name: "UserTouserpost")
}

model s {
  id Int @id @default(autoincrement())
}

enum Categories {
  Cat1
  Cat2
}
